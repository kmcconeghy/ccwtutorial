{
  "hash": "c715795fd5263516fcba07ce2fba8a0f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Simulation\"\n---\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nloading canon packages....\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDone \n```\n\n\n:::\n:::\n\n\n\n\nTo generate a working dataset for use in the tutorial, I follow these steps:\n\n1) Use a starting sample size of a 1000 (i.e. persons) \n2) I generate a few covariates for weighting:\n  i) Age, normally distributed mean=75, SD=10\n  ii) Gender, random 0/1 binary variable for female, with 66% probability of female\n  iii) Dx_1 (Pr=0.1); Dx_2 (Pr=0.4) taken as some chronic condition diagnosis\n    \n::: {.callout-note}\nThese variables are generated independently, but in real-life would be correlated...\n:::\n\n\n3) Assign relative effect sizes for each\n  i)   ef_treat  = 0.8\n  ii)  ef_gender = 0.9\n  iii) ef_age    = 0.98 (per unit of age)\n  iv)  ef_dx_1   = 1.2\n  v)   ef_dx_2   = 0.8 \n  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Number of participants\n  n <- 1000\n\n# COVARIATES ----\n\n  # Generate age (normal distribution with mean=75, std=10)\n    age <- round(rnorm(n, mean = 75, sd = 10), 1)\n  \n  # Generate gender (66% female, 34% male)\n    female <- sample(c(1, 0), size = n, replace = TRUE, prob = c(0.66, 0.34))\n  \n  # Generate treatment status (20% treated, 90% control)\n    treat <- sample(c(1, 0), size = n, replace = TRUE, prob = c(0.2, 0.8))\n    \n  # Generate chronic conditions\n    dx_1 <- sample(c(1, 0), size = n, replace = TRUE, prob = c(0.1, 0.9))\n    dx_2 <- sample(c(1, 0), size = n, replace = TRUE, prob = c(0.4, 0.6))\n    \n    # effect sizes\n    ef_treat = 0.8\n    ef_gender = 0.9\n    ef_age = 0.98\n    ef_dx_1 = 1.2\n    ef_dx_2 = 0.8\n```\n:::\n\n\n\n\n4) Compute the linear predictor, with a baseline hazard of 0.05. 0.05 selected based on trial and error.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# log-hazard\n    lp_outc <- log(ef_treat) * treat +\n      log(ef_gender) * female +\n      log(ef_age) * age + log(ef_dx_1)*dx_1 + log(ef_dx_2)*dx_2\n  \n  # Simulate baseline survival times (exponential distribution)\n    baseline_hazard <- 0.05 \n```\n:::\n\n\n\n\n# SIMULATE FAILURE TIMES ----\n\n  1) Simulate survival times from the baseline hazard, using exponential distribution\n  2) Adjust the times based on linear predictor\n  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n    baseline_survival <- rexp(n, rate = baseline_hazard)\n    \n  # Adjust survival times based on linear predictor\n    t_outc <- round(baseline_survival * exp(-lp_outc))\n```\n:::\n\n\n\n\n  3) Simulate treatment start times based on key variables (for informative weighting model); assumed dx_1 and dx_2 unrelated to treatment.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  # TREATIME INITIATION TIMES\n    lp_treat <- log(0.7) * female + log(1.02) * age\n  \n    baseline_hazard <- 0.1\n    t_treat <- ifelse(treat==1, round(rexp(n, rate = baseline_hazard)* exp(-lp_treat)), Inf)\n```\n:::\n\n\n\n\n  4) Combine into one dataset; set administrative end of follow-up at 60\n  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  # Create dataset\n    data <- data.frame(\n      age = age,\n      female = female,\n      dx_1 = dx_1,\n      dx_2 = dx_2,\n      treat = treat, #ever treated\n      t_treat = t_treat, # time treat initiated\n      t_outc = t_outc # time of outcome\n    ) %>%\n      mutate(id = row_number(),\n             time = pmin(60, t_outc), # set 60 as end of follow-up\n             event_outc = if_else(time==t_outc, 1L, 0L))\n```\n:::\n\n\n\n\n# Summary of dataset  \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# quick test\nsummary(survfit(Surv(time, event_outc) ~ treat, data = data))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall: survfit(formula = Surv(time, event_outc) ~ treat, data = data)\n\n                treat=0 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    0    778       3    0.996 0.00222        0.992        1.000\n    1    775       8    0.986 0.00423        0.978        0.994\n    2    767       6    0.978 0.00524        0.968        0.988\n    3    761       7    0.969 0.00620        0.957        0.981\n    4    754      11    0.955 0.00743        0.941        0.970\n    5    743       3    0.951 0.00773        0.936        0.966\n    6    740       8    0.941 0.00846        0.924        0.958\n    7    732       5    0.934 0.00887        0.917        0.952\n    8    727       5    0.928 0.00927        0.910        0.946\n    9    722       7    0.919 0.00978        0.900        0.938\n   10    715      10    0.906 0.01045        0.886        0.927\n   11    705       9    0.895 0.01101        0.873        0.916\n   12    696       7    0.886 0.01141        0.864        0.908\n   13    689       8    0.875 0.01184        0.852        0.899\n   14    681       3    0.871 0.01200        0.848        0.895\n   15    678      10    0.859 0.01249        0.834        0.883\n   16    668       5    0.852 0.01272        0.828        0.877\n   17    663       3    0.848 0.01286        0.823        0.874\n   18    660      11    0.834 0.01333        0.808        0.861\n   19    649       4    0.829 0.01350        0.803        0.856\n   20    645       5    0.823 0.01369        0.796        0.850\n   21    640       8    0.812 0.01400        0.785        0.840\n   22    632       6    0.805 0.01421        0.777        0.833\n   23    626      12    0.789 0.01462        0.761        0.818\n   24    614       4    0.784 0.01475        0.756        0.814\n   25    610       7    0.775 0.01497        0.746        0.805\n   26    603       8    0.765 0.01521        0.736        0.795\n   27    595       4    0.760 0.01532        0.730        0.790\n   28    591       1    0.758 0.01535        0.729        0.789\n   29    590       9    0.747 0.01559        0.717        0.778\n   30    581       7    0.738 0.01577        0.708        0.769\n   31    574       4    0.733 0.01587        0.702        0.764\n   32    570      14    0.715 0.01619        0.684        0.747\n   33    556       5    0.708 0.01630        0.677        0.741\n   34    551       3    0.704 0.01636        0.673        0.737\n   35    548       6    0.697 0.01648        0.665        0.730\n   36    542       5    0.690 0.01658        0.658        0.724\n   37    537       3    0.686 0.01663        0.655        0.720\n   38    534       3    0.683 0.01669        0.651        0.716\n   39    531       8    0.672 0.01683        0.640        0.706\n   40    523       4    0.667 0.01690        0.635        0.701\n   41    519       6    0.659 0.01699        0.627        0.694\n   42    513       6    0.652 0.01708        0.619        0.686\n   43    507       3    0.648 0.01712        0.615        0.682\n   44    504       4    0.643 0.01718        0.610        0.677\n   45    500       1    0.641 0.01719        0.609        0.676\n   46    499       7    0.632 0.01729        0.599        0.667\n   47    492       4    0.627 0.01734        0.594        0.662\n   48    488       6    0.620 0.01741        0.586        0.655\n   49    482       9    0.608 0.01750        0.575        0.643\n   50    473       6    0.600 0.01756        0.567        0.636\n   51    467       6    0.593 0.01762        0.559        0.628\n   52    461       5    0.586 0.01766        0.553        0.622\n   53    456       5    0.580 0.01770        0.546        0.615\n   54    451       4    0.575 0.01773        0.541        0.610\n   55    447       9    0.563 0.01778        0.529        0.599\n   56    438       6    0.555 0.01782        0.521        0.591\n   57    432       5    0.549 0.01784        0.515        0.585\n   58    427       3    0.545 0.01785        0.511        0.581\n   59    424       5    0.539 0.01787        0.505        0.575\n   60    419       7    0.530 0.01789        0.496        0.566\n\n                treat=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    0    222       1    0.995 0.00449        0.987        1.000\n    2    221       2    0.986 0.00775        0.971        1.000\n    3    219       2    0.977 0.00996        0.958        0.997\n    4    217       1    0.973 0.01088        0.952        0.995\n    5    216       2    0.964 0.01251        0.940        0.989\n    6    214       2    0.955 0.01392        0.928        0.983\n    8    212       1    0.950 0.01456        0.922        0.979\n    9    211       1    0.946 0.01518        0.917        0.976\n   10    210       1    0.941 0.01576        0.911        0.973\n   11    209       3    0.928 0.01736        0.895        0.963\n   12    206       2    0.919 0.01832        0.884        0.956\n   13    204       2    0.910 0.01922        0.873        0.948\n   14    202       2    0.901 0.02005        0.862        0.941\n   15    200       3    0.887 0.02122        0.847        0.930\n   16    197       1    0.883 0.02158        0.842        0.926\n   17    196       2    0.874 0.02228        0.831        0.919\n   18    194       1    0.869 0.02262        0.826        0.915\n   19    193       1    0.865 0.02294        0.821        0.911\n   21    192       1    0.860 0.02326        0.816        0.907\n   22    191       3    0.847 0.02417        0.801        0.896\n   23    188       1    0.842 0.02446        0.796        0.892\n   25    187       2    0.833 0.02501        0.786        0.884\n   26    185       1    0.829 0.02528        0.781        0.880\n   28    184       3    0.815 0.02604        0.766        0.868\n   29    181       1    0.811 0.02629        0.761        0.864\n   31    180       3    0.797 0.02698        0.746        0.852\n   32    177       4    0.779 0.02784        0.727        0.836\n   33    173       1    0.775 0.02804        0.722        0.832\n   34    172       4    0.757 0.02880        0.702        0.815\n   35    168       2    0.748 0.02915        0.693        0.807\n   37    166       4    0.730 0.02981        0.674        0.791\n   38    162       2    0.721 0.03011        0.664        0.782\n   39    160       2    0.712 0.03040        0.655        0.774\n   40    158       1    0.707 0.03054        0.650        0.770\n   41    157       2    0.698 0.03081        0.640        0.761\n   45    155       1    0.694 0.03094        0.636        0.757\n   48    154       2    0.685 0.03118        0.626        0.749\n   50    152       2    0.676 0.03142        0.617        0.740\n   51    150       1    0.671 0.03153        0.612        0.736\n   54    149       1    0.667 0.03164        0.607        0.732\n   55    148       1    0.662 0.03174        0.603        0.727\n   57    147       3    0.649 0.03204        0.589        0.715\n   58    144       3    0.635 0.03231        0.575        0.702\n   59    141       1    0.631 0.03239        0.570        0.697\n   60    140       2    0.622 0.03255        0.561        0.689\n```\n\n\n:::\n:::\n\n\n\n * Note: no censoring mechanism except end of follow-up at day 60. \n\n\n\n\n::: {.cell}\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}